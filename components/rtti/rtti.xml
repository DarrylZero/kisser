<project name="rtti"
         basedir="../.."
         default="rtti.lib.all">

    <!-- Секция импорта файлов -->
    <!--<import file="../../../commonlibs/anttasksdefinitions.xml"/>-->
    <import file="../rttibase/rttibase.xml"/>

    <path id="rtti.class.path">
        <pathelement path="build/components/rtti/classes"/>

        <fileset dir="../commonlibs">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="../libraries/libs">
            <include name="junit.jar"/>
        </fileset>
    </path>

    <taskdef name="smartcopy"
             classname="ru.steamengine.helpers.anttasks.smartcopy.SmartCopy"
             classpathref="rtti.class.path"/>

    <taskdef name="filechecker"
             classname="ru.steamengine.helpers.anttasks.filechecker.FileChecker"
             classpathref="rtti.class.path"/>

    <property file="components/rtti/rtti.properties"/>

    <target name="rtti.clear.lib">
        <delete dir="build/components/rtti"/>
    </target>

    <target name="rtti.clear.all">
        <delete dir="build/components/rtti"/>
        <delete file="../commonlibs/rtti.jar"/>
        <delete file="../commonlibs/rtti-src.jar.jar"/>
    </target>

    <target name="rtti.jar.check">
        <uptodate property="rtti.jar.skip"
                  targetfile="../commonlibs/rtti.jar">


            <srcfiles dir="components/rtti/META-INF"/>
            <srcfiles dir="components/rtti/src"/>
            <srcfiles file="components/rtti/rtti.xml"/>
            <srcfiles file="components/rtti/rtti.properties"/>
        </uptodate>
    </target>

    <target name="rtti.jar"
            depends="rttibase.jar, rtti.jar.check"
            unless="rtti.jar.skip">

        <mkdir dir="build/components/rtti"/>
        <mkdir dir="build/components/rtti/classes"/>

        <filechecker startpath="components/rtti/src"/>
        <!-- Построение компонента -->
        <javac target="1.6"
               source="1.6"
               srcdir="components/rtti/src"
               destdir="build/components/rtti/classes"
               debug="true"
               optimize="on"
               encoding="utf-8"
               classpathref="rtti.class.path">
        </javac>

        <copydir src="components/rtti/META-INF" dest="build/components/rtti/classes/META-INF"/>

        <copy todir="build/components/rtti/classes/META-INF">
            <fileset dir="components/licenses">
                <include name="Lic*.txt"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>


        <!-- application file -->
        <jar destfile="../commonlibs/rtti.jar"
             basedir="build/components/rtti/classes"
             compress="false">
            <manifest>
                <attribute name="productname" value="${rtti.build.productname}"/>
                <attribute name="version" value="${rtti.build.version}"/>
            </manifest>
        </jar>

    </target>


    <target name="rtti-smart-public-sources"
            description="coping the source codes for common use"
            depends="rtti.jar">

        <mkdir dir="components/rtti/temp"/>
        <smartcopy sourcedir="components/rtti/src"
                   targetdir="components/rtti/temp">
            <item value="Public API"/>
        </smartcopy>

        <jar destfile="../commonlibs/rtti-src.jar"
             basedir="components/rtti/temp"
             compress="true">
        </jar>
    </target>
                                                 
    <target name="rtti.rtti.lib.public"
            description="coping the source codes for common use"
            depends="rtti-smart-all-sources"/>

    <target name="rtti-smart-all-sources"
            description="coping the source codes for common use"
            depends="rtti.jar">

        <jar destfile="../commonlibs/rtti-src-all.jar"
             basedir="components/rtti/src"
             compress="true">
        </jar>
    </target>

    <!--построение библиотеки-->
    <target name="rtti.lib.all"
            description="build library for common use"
            depends="rtti-smart-public-sources,
            rtti-smart-all-sources">
    </target>


</project>