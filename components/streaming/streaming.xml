<project name="streaming"
         basedir="../.."
         default="streaming.lib.public">

    <!-- Секция импорта файлов -->
    <import file="../rtti/rtti.xml"/>
    <!--<import file="../../../commonlibs/anttasksdefinitions.xml"/>-->


    <path id="streaming.class.path">
        <pathelement path="build/components/rtti/classes"/>
        <pathelement path="build/components/streaming/classes"/>

        <fileset dir="../commonlibs">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="../libraries/libs">
            <include name="junit.jar"/>
        </fileset>
    </path>

    <taskdef name="smartcopy"
             classname="ru.steamengine.helpers.anttasks.smartcopy.SmartCopy"
             classpathref="streaming.class.path"/>

    <property file="components/streaming/streaming.properties"/>

    <target name="streaming.clear">
        <delete dir="build/components/streaming"/>
    </target>

    <target name="streaming.jar.check">
        <uptodate property="streaming.jar.skip"
                  targetfile="build/components/streaming.jar">
            <srcfiles dir="components/streaming/src"/>
            <srcfiles dir="components/streaming/streaming.xml"/>
            <srcfiles dir="components/streaming/streaming.properties"/>
        </uptodate>
    </target>

    <taskdef name="filechecker"
             classname="ru.steamengine.helpers.anttasks.filechecker.FileChecker"
             classpathref="streaming.class.path"/>


    <target name="streaming.jar"
            depends="rtti.jar, streaming.jar.check"
            unless="streaming.jar.skip">

        <mkdir dir="build/components/streaming"/>
        <mkdir dir="build/components/streaming/classes"/>

        <filechecker startpath="components/streaming/src"/>
        <!-- Построение компонента -->
        <javac target="1.6"
               source="1.6"
               srcdir="components/streaming/src"
               destdir="build/components/streaming/classes"
               debug="true"
               optimize="on"
               encoding="utf-8"
               classpathref="streaming.class.path">
        </javac>

        <copydir src="components/streaming/META-INF"
                 dest="build/components/streaming/classes/META-INF"/>

        <copy todir="build/components/streaming/classes/META-INF">
            <fileset dir="components/licenses">
                <include name="Lic*.txt"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>


        <jar destfile="../commonlibs/streaming.jar"
             basedir="build/components/streaming/classes"
             compress="false">
            <manifest>
                <attribute name="productname" value="${streaming.build.productname}"/>
                <attribute name="version" value="${streaming.build.version}"/>
            </manifest>
        </jar>
    </target>


    <target name="streaming-smart-copy-public"
            description="coping the source code for common use"
            depends="streaming.jar">
        <mkdir dir="components/streaming/temp"/>
        <smartcopy sourcedir="components/streaming/src"
                   targetdir="components/streaming/temp">
            <item value="Public API"/>
        </smartcopy>
    </target>

    <target name="streaming-smart-copy-all"
            description="coping the source code for common use"
            depends="streaming.jar">
        <mkdir dir="components/streaming/temp"/>
        <smartcopy sourcedir="components/streaming/src"
                   targetdir="components/streaming/temp">
            <item value="  "/>
        </smartcopy>
    </target>

    <!--построение библиотеки-->
    <target name="streaming.lib.public"
            description="build library for common use"
            depends="streaming.jar, streaming-smart-copy-public">

        <!--копируем Jar -->
        <copy todir="build/components/streaming/temp">
            <fileset dir="build/components">
                <include name="streaming.jar"/>
            </fileset>
            <filterchain>
                <expandproperties/>
            </filterchain>
        </copy>


        <jar destfile="../commonlibs/streaming-src.jar"
             basedir="components/streaming/temp"
             compress="true">
        </jar>

        <delete dir="components/streaming/temp"/>
    </target>

    <!--построение библиотеки-->
    <target name="streaming.lib.all"
            description="build library for common use"
            depends="streaming.jar, streaming.lib.public">

        <jar destfile="../commonlibs/streaming-src-all.jar"
             basedir="components/streaming/src"
             compress="true">
        </jar>

    </target>


</project>